h1.Homogeneous transformations 3D : Manipulate homogeneous transformations and orthonormal rotation matrices
angvec2r    : angle/vector to RM
angvec2tr   : angle/vector to HT
eul2r       : Euler angles to RM
eul2tr      : Euler angles to HT
oa2r        : orientation and approach vector to RM 
oa2tr       : orientation and approach vector to HT
rotx        : RM for rotation about X-axis
roty        : RM for rotation about Y-axis
rotz        : RM for rotation about Z-axis
rpy2r       : roll/pitch/yaw angles to RM
rpy2tr      : roll/pitch/yaw angles to HT
tr2angvec   : HT/RM to angle/vector form
tr2eul      : HT/RM to Euler angles 
tr2rpy      : HT/RM to roll/pitch/yaw angles
tranimate  : animate a coordinate frame
transl      : set or extract the translational component of HT
trnorm      : normalize HT 
trplot      : plot HT as a coordinate frame
trprint     : print an HT
trotx       : HT for rotation about X-axis
troty       : HT for rotation about Y-axis
trotz       : HT for rotation about Z-axis

h1.Homogeneous transformations 2D : Manipulate homogeneous transformations and orthonormal rotation matrices
se2         : HT in SE(2)
trplot2     : plot HT, SE(2), as a coordinate frame
transl2      : set or extract the translational component of HT
rot2         : rotation matrix

h1.Homogeneous transformation utilities : Manipulate homogeneous transformations and orthonormal rotation matrices
r2t         : RM to HT
rt2tr       : (R,t) to HT
t2r         : HT to RM
tr2rt      : HT to (R,t)

h1. Homogeneous points and lines : Manipulate homogeneous points and lines
e2h         : Euclidean coordinates to homogeneous
h2e         : homogeneous coordinates to Euclidean
homline     : create line from 2 points
homtrans    : transform points

#HT = homogeneous transformation, a 4x4 matrix, belongs to the group SE(3).
#RM = RM, an orthonormal 3x3 matrix, belongs to the group SO(3).
#Functions of the form <b>tr2XX</b> will also accept a RM as the argument.

h1.Differential motion : Convert differential motion between coordinate frames
delta2tr     : differential motion vector to HT 
eul2jac : Euler angles to Jacobian
rpy2jac : RPY angles to Jacobian
skew : vector to skew symmetric matrix
tr2delta     : HT to differential motion vector 
tr2jac      : HT to Jacobian 
vex : skew symmetric matrix to vector
wtrans : transform wrench between frames

h1.Trajectory generation : Create motion trajectory and interpolate poses
ctraj       : Cartesian trajectory 
jtraj       : joint space trajectory 
lspb : 1D trapezoidal trajectory
mtraj : multi-axis trajectory for arbitrary function
mstraj : multi-axis multi-segment trajectory
tpoly : 1D polynomial trajectory
trinterp    : interpolate HT s

h1.Quaternion : Manipulate unit quaternions
Quaternion : constructor
/           : divide quaternion by quaternion or scalar
*           : multiply quaternion by a quaternion or vector
Quaternion.inv         : invert a quaternion 
Quaternion.norm        : norm of a quaternion 
Quaternion.plot        : display a quaternion as a 3D rotation
Quaternion.unit        : unitize a quaternion 
Quaternion.interp     : interpolate a quaternion

h1.Serial-link manipulator : Class representing the kinematics and dynamics of a serial-link manipulator
SerialLink : construct a serial-link robot object
Link        : construct a robot link object 
Revolute    : construct a revolute link object
Prismatic   : construct a prismatic link object
RevoluteMDH    : construct a revolute link object (MDH params)
PrismaticMDH   : construct a prismatic link object (MDH params)
*           : compound two robots
SerialLink.friction    : return joint friction torques
SerialLink.nofriction  : return a robot object with no friction
SerialLink.perturb     : return a robot object with perturbed parameters
SerialLink.plot        : plot/animate robot 
SerialLink.teach    : drive a graphical  robot 

h2.Models : Models of serial-link manipulators
DHFactor : convert elementary transformations to DH form
models          : list/search all models
mdl_3link3d
mdl_KR5         : Kuka KR5
mdl_S4ABB2p8    : ABB S4 2.8 (DH, kine)
mdl_ball        : high DOF ball robot
mdl_baxter      : Rethink Robotics Baxter
mdl_coil        : high DOF coiled robot
mdl_Fanuc10L    : Fanuc 10L (DH, kine)
mdl_hyper2d     : high DOF planar
mdl_hyper3d     : high DOF 3D
mdl_irb140      : ABB IRB140
mdl_irb140_mdh  : ABB IRB140 (MDH)
mdl_jaco        : Kinova Jaco
mdl_m16         : Fanuc M16
mdl_mico        : Kinova Jaco
mdl_MotomanHP6  : Motoman HP6 (DH, kine)
mdl_nao         : Alderbaran Nao humanoid
mdl_offset6     : simple 6-link arm with shoulder offset
mdl_p8          : Puma 560 on an XY base
mdl_phantomx    : PhantomX pincher
mdl_planar1     : 1 line planar robot
mdl_planar2     : 1 line planar robot
mdl_planar3     : 1 line planar robot
mdl_puma560     : Puma 560 data (DH, kine, dyn)
mdl_puma560akb  : Puma 560 data (MDH, kine, dyn)
mdl_quadrotor   : simple quadcopter model
mdl_simple6
mdl_stanford    : Stanford arm data (DH, kine, dyn)
mdl_stanford_mdh
mdl_twolink     : simple 2-link example (DH, kine)
mdl_twolink_mdh : simple 2-link example (MDH, kine)
mdl_twolink_sym : simple 2-link example (DH, kine, symbolic)

h2.Kinematic : Serial-link manipulator kinematic functions
DHFactor        : transform sequence to DH description
SerialLink.fkine       : forward kinematics 
SerialLink.ikine       : inverse kinematics (numeric)
SerialLink.ikine6s    : inverse kinematics for 6-axis arm with sph.wrist
SerialLink.jacob0      : Jacobian in base coordinate frame
SerialLink.jacobn      : Jacobian in end-effector coordinate frame
SerialLink.maniplty    : compute manipulability 

h2.Dynamics : Serial-link manipulator dynamic functions
SerialLink.accel       : forward dynamics
SerialLink.cinertia    : Cartesian manipulator inertia matrix 
SerialLink.coriolis    : centripetal/coriolis torque 
SerialLink.fdyn        : forward dynamics
wtrans      : transform a force/moment 
SerialLink.gravload    : gravity loading 
SerialLink.inertia     : manipulator inertia matrix 
SerialLink.itorque     : inertia torque 
SerialLink.rne         : inverse dynamics 

h1.Mobile robot : Classes for mobile robotics problems
Map : point feature map object
RandomPath : driver for Vehicle object
RangeBearingSensor : "laser scanner" object
Vehicle : construct a mobile robot object
sl_bicycle : Simulink "bicycle model" of non-holonomic wheeled vehicle
Navigation : Navigation superclass
Sensor : robot sensor superclass
plot_vehicle    : plot vehicle

h2.Localization : Mobile robot localization algorithms
EKF : extended Kalman filter object
ParticleFilter : Monte Carlo estimator

h2.Path planning : Mobile robot path planning algorithms
Bug2 : bug navigation
DXform : distance transform from map
Dstar : D* planner
PRM : probabilistic roadmap planner
RRT : rapidly exploring random tree

h1.Graphics : Useful graphic primitives
circle      : compute/draw points on a circle
mplot       : time series plotting
plot2    : plot trajectory
plotp    : plot points
plot_arrow : draw an arrow
plot_box : draw a box
plot_circle : draw a circle
plot_ellipse : draw an ellipse
plot_homline : plot homogeneous line
plot_point   : plot points
plot_poly    : plot polygon
plot_sphere : draw a sphere
qplot : plot joint angle trajectories
xaxis : set x-axis scaling
yaxis : set y-axis scaling
xyzlabel : label axes x, y and z

h1.Utility : Miscellaneous functions
about       : summary of object size and type
angdiff     : subtract 2 angles modulo 2pi
bresenham   : Bresenhan line drawing
colnorm     : columnwise norm of matrix
diff2       : elementwise diff
gauss2d     : Gaussian distribution in 2D
ishomog     : true if argument is a 4x4 matrix
ismatrix    : true if non scalar
isrot       : true if argument is a 3x3 matrix
isvec       : true if argument is a 3-vector
numcols     : number of columns in matrix
numrows     : number of rows in matrix
peak        : find peak in 1D signal
peak2        : find peak in 2D signal
PGraph : general purpose graph class
polydiff    : derivative of polynomial
Polygon : general purpose polygon class
randinit    : initialize random number generator
ramp        : create linear ramp
runscript   : step through a script file
unit        : unitize a vector
tb_optparse : toolbox argument parser
distancexform: compute distance transform

h1.Demonstrations
rtbdemo      : Serial-link manipulator demonstration

h1.Examples
sl_quadcopter : Simulink model of a flying quadcopter
sl_braitenberg: Simulink model a Braitenberg vehicle
movepoint : non-holonomic vehicle moving to a point
moveline : non-holonomic vehicle moving to a line
movepose : non-holonomic vehicle moving to a pose
walking : example of 4-legged walking robot
eg_inertia : joint 1 inertia I(q1,q2)
eg_inertia22 : joint 2 inertia I(q3)
eg_grav : joint 2 gravity load g(q2,q3)
@plotbotopt
# located in the examples folder
